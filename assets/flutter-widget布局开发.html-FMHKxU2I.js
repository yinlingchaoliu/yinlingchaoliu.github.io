import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as o,a as t}from"./app-CtvCwAmI.js";const r={},n=t("p",null,"widget开发思路",-1),a=t("p",null,"widget 相当于View 开发flutter布局，并不是那么直观 我们用constraintLayout 写法是一层， 对于使用者来言，更直观。 最好的方式就是一层。",-1),l=t("p",null,"最好采用mvp 把逻辑和视图分离 或者类似android-flux效果 这些写起布局清爽，也不用考虑与布局无关的逻辑， 太多widget内私有方法，或者全局变量会导致程序不易读",-1),d=t("p",null,"以往开发baseTemplete效果， 公共titlebar ,公共 theme 公共 frame 公共list列表 可以解决布局大部分需求",-1),c=t("p",null,"理念就是用模板",-1),p=t("p",null,"而不是重复的语法，重复写，项目四处都是",-1),s=[n,a,l,d,c,p];function m(u,g){return i(),o("div",null,s)}const _=e(r,[["render",m],["__file","flutter-widget布局开发.html.vue"]]),w=JSON.parse('{"path":"/fe/cross-end/flutter/flutter-widget%E5%B8%83%E5%B1%80%E5%BC%80%E5%8F%91.html","title":"flutter-widget布局开发","lang":"zh-CN","frontmatter":{"title":"flutter-widget布局开发","date":"2024-03-25T22:02:09.000Z","category":["flutter学习"],"tag":["archive"],"description":"widget开发思路 widget 相当于View 开发flutter布局，并不是那么直观 我们用constraintLayout 写法是一层， 对于使用者来言，更直观。 最好的方式就是一层。 最好采用mvp 把逻辑和视图分离 或者类似android-flux效果 这些写起布局清爽，也不用考虑与布局无关的逻辑， 太多widget内私有方法，或者全局变量...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/cross-end/flutter/flutter-widget%E5%B8%83%E5%B1%80%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"flutter-widget布局开发"}],["meta",{"property":"og:description","content":"widget开发思路 widget 相当于View 开发flutter布局，并不是那么直观 我们用constraintLayout 写法是一层， 对于使用者来言，更直观。 最好的方式就是一层。 最好采用mvp 把逻辑和视图分离 或者类似android-flux效果 这些写起布局清爽，也不用考虑与布局无关的逻辑， 太多widget内私有方法，或者全局变量..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-25T22:02:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"flutter-widget布局开发\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-25T22:02:09.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"fe/cross-end/flutter/flutter-widget布局开发.md","localizedDate":"2024年3月26日","excerpt":"<p>widget开发思路</p>\\n<p>widget 相当于View\\n开发flutter布局，并不是那么直观\\n我们用constraintLayout 写法是一层，\\n对于使用者来言，更直观。\\n最好的方式就是一层。</p>\\n<p>最好采用mvp\\n把逻辑和视图分离\\n或者类似android-flux效果\\n这些写起布局清爽，也不用考虑与布局无关的逻辑，\\n太多widget内私有方法，或者全局变量会导致程序不易读</p>\\n<p>以往开发baseTemplete效果，\\n公共titlebar ,公共 theme 公共 frame\\n公共list列表 可以解决布局大部分需求</p>\\n<p>理念就是用模板</p>\\n","autoDesc":true}');export{_ as comp,w as data};
