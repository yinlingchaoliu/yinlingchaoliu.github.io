import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as i,c as s,a as e,b as t,d as r}from"./app-CtvCwAmI.js";const d={},l=e("p",null,[t("####1、组件化选型结论 "),e("code",null,"方案是Arouter+auto-register+自己造轮子补充"),t(" 原因：arouter使用简单，可以做组件间解耦， auto-register 解决了arouter加载组件是反射效率低下问题。原理asm修改字节码")],-1),c={href:"https://www.jianshu.com/p/d372cc6802e5",target:"_blank",rel:"noopener noreferrer"},p={id:"_2、-android彻底组件化demo发布",tabindex:"-1"},h={class:"header-anchor",href:"#_2、-android彻底组件化demo发布"},_={href:"https://www.jianshu.com/p/59822a7b2fad",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,[t("可以学习到思想： 1、代码和资源隔离 "),e("code",null,"2、组件单独运行和集成发布 ，提供gradle插件（采用）"),t(" 3、借鉴采用javassit 缺点： 1、JIMI用户不多 2、API调用暴露了很多底层细节，开发者用户还需要反复看源代码，才能清晰明白 3、core代码写得不够洁癖")],-1),m={id:"_3、wmrouter-美团外卖android开源路由框架",tabindex:"-1"},g={class:"header-anchor",href:"#_3、wmrouter-美团外卖android开源路由框架"},b={href:"https://www.jianshu.com/p/020a5b18ba42",target:"_blank",rel:"noopener noreferrer"},f={href:"https://tech.meituan.com/2018/08/23/meituan-waimai-android-open-source-routing-framework.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://cloud.tencent.com/developer/article/1333363",target:"_blank",rel:"noopener noreferrer"},A=e("p",null,"最初背景：产品希望通过后台下发URI控制客户端跳到指定页面，从而实现灵活的运营配置",-1),B=e("p",null,[t("优点： 基于URI开发的框架，可灵活配置 "),e("code",null,"自定义ServiceLoader,不错的扩展性，可以跨组件访问数据(采用)")],-1),E=e("p",null,"缺点： 1、灵活性强，反衬易用性不足 2、ServiceLoader，并不能真正意义解除依赖， 还需要将Interfaces下沉的base,或者引用该moudle",-1),C=e("p",null,"总之，可以备选的，基于URI的优秀的路由框架",-1),y={href:"https://www.wanandroid.com/blog/show/2072",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"1、文档全面介绍详实(采用)",-1),k=e("code",null,"2、组件间调用者(采用)",-1),x=e("code",null,"3、cc-register 采用asm，可以配合arouter(采用)",-1),I=e("code",null,"4、采用服务架构，将组件间关系扁平化",-1),j=e("p",null,"缺点： 1、集成太复杂 2、调用方式，还不够亲民 3、代码编写，暴露给用户细节太多 4、gradle的配置，实在是难以让人接受 5、跨组件调用，用不到RPC（AIDL）技术 6、RPC建议专门一个库实现，例如饿了么Hermes 7、组件提供的功能太多，提供api越多，后期兼容性越差，关键核心类要采用final修饰，避免使用者有歧义",-1),P=e("p",null,"总之：非常好的总线框架，学习成本高，需要经验",-1),R={id:"_5、apache-dubbo",tabindex:"-1"},T={class:"header-anchor",href:"#_5、apache-dubbo"},M={href:"http://dubbo.apache.org/zh-cn/index.html",target:"_blank",rel:"noopener noreferrer"},S=e("ul",null,[e("li",null,[t("软件架构"),e("img",{src:"https://upload-images.jianshu.io/upload_images/5526061-8edba5ea1e96d7c4.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240",alt:"",loading:"lazy"})])],-1),z=e("p",null,"分布式系统学习笔记 https://blog.csdn.net/lchpersonal521/article/details/84107272 优点 1、分布式服务，服务组件间隔离 2、服务降级，服务发现，服务注册 3、RPC+依赖注入+SPI+javassit 缺点： 这套思想应用安卓场景需要适配，参考CC",-1),N=e("p",null,"核心思想：依赖注入+SPI+RPC+javassit",-1),V={href:"https://github.com/alibaba/ARouter",target:"_blank",rel:"noopener noreferrer"},Z=e("p",null,[t("优点： "),e("code",null,"解除依赖，调用页面服务，只需要知道对应常量"),e("code",null,"使用简单易懂，用户群体大，资料详细")],-1),q=e("p",null,"缺点： 常量需要下沉到基础库",-1),L=e("p",null,"总之，采用Arouter方案",-1),D={id:"_7、微信android模块化架构重构实践",tabindex:"-1"},J={class:"header-anchor",href:"#_7、微信android模块化架构重构实践"},U={href:"https://mp.weixin.qq.com/s/6Q818XA5FaHd7jJMFBG60w",target:"_blank",rel:"noopener noreferrer"},W=e("p",null,[t("优秀思想 "),e("code",null,"①重塑模块化，分解为三个目标"),t(' 1、改变通信方式 ： spi+".api化" 采用 2、重新设计模块：重新设计代码分层，强化职责和设计 3、约束代码边界：隔离思想，采用pins工程 '),e("code",null,"②代码之外，架构之内"),t(" 1、模块负责人制度 2、重构与开发者心态 3、模块划分经验之谈")],-1),F=e("p",null,"优点：指明思路和方向 缺点：代码需要自己实现",-1),H=e("p",null,"评价：采用微信的组件化思想，代码逻辑需要因地制宜实现",-1),G=e("p",null,[t("#####自己手动编写轮子Thor 组件化需要一套系统完整的方案，来综上所述的优点，也避免一些不易用的缺点，为了实现这个目标，最好的"),e("code",null,"方案是Arouter+auto-register+自己造轮子补充"),t(" 接下来一段时间，我要自己造轮子了，吼吼~~~")],-1),O=e("p",null,"#####Android架构思考(模块化、多进程) 也推荐这篇文章 http://blog.spinytech.com/2016/12/28/android_modularization/",-1);function Q(X,K){const o=a("ExternalLinkIcon");return i(),s("div",null,[l,e("p",null,[t("####2、其他组件方案对比 ######1、"),e("a",c,[t("美团猫眼电影android模块化实战"),r(o)]),t(' 可以学习到的思想 1、无入侵式配置各种服务 采用serviceload 缺点： 最重要一点：无代码示例 1、serviceload (SPI)对于用户来讲不易使用 2、无论spi还是arouter，都不能解决配置下沉到base，不如使用arouter 3、最好解决方案还是"腾讯.api方案"')]),e("h6",p,[e("a",h,[e("span",null,[t("2、 "),e("a",_,[t("Android彻底组件化demo发布"),r(o)])])])]),u,e("h6",m,[e("a",g,[e("span",null,[t("3、"),e("a",b,[t("WMRouter：美团外卖Android开源路由框架"),r(o)])])])]),e("p",null,[t("美团的博客："),e("a",f,[t("WMRouter：美团外卖Android开源路由框架"),r(o)]),e("a",w,[t("美团外卖开源路由框架 WMRouter 源码分析"),r(o)])]),A,B,E,C,e("p",null,[t("######4、"),e("a",y,[t("使用简单但功能强大的安卓组件化框架 CC"),r(o)]),t(" 介绍网页：https://qibilly.com/CC-website/ 优点： "),v,k,x,I]),j,P,e("h6",R,[e("a",T,[e("span",null,[t("5、"),e("a",M,[t("Apache Dubbo"),r(o)])])])]),S,z,N,e("p",null,[t("######6、"),e("a",V,[t("Arouter"),r(o)])]),Z,q,L,e("h6",D,[e("a",J,[e("span",null,[t("7、"),e("a",U,[t("微信Android模块化架构重构实践"),r(o)])])])]),W,F,H,G,O])}const ee=n(d,[["render",Q],["__file","第2章-组件化选型.html.vue"]]),te=JSON.parse('{"path":"/fe/android/Android%E7%BB%84%E4%BB%B6%E5%8C%96/%E7%AC%AC2%E7%AB%A0-%E7%BB%84%E4%BB%B6%E5%8C%96%E9%80%89%E5%9E%8B.html","title":"第2章-组件化选型","lang":"zh-CN","frontmatter":{"title":"第2章-组件化选型","date":"2024-03-24T11:47:50.000Z","category":["Android组件化"],"tag":["archive"],"description":"####1、组件化选型结论 方案是Arouter+auto-register+自己造轮子补充 原因：arouter使用简单，可以做组件间解耦， auto-register 解决了arouter加载组件是反射效率低下问题。原理asm修改字节码 ####2、其他组件方案对比 ######1、美团猫眼电影android模块化实战 可以学习到的思想 1、无入侵...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/android/Android%E7%BB%84%E4%BB%B6%E5%8C%96/%E7%AC%AC2%E7%AB%A0-%E7%BB%84%E4%BB%B6%E5%8C%96%E9%80%89%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"第2章-组件化选型"}],["meta",{"property":"og:description","content":"####1、组件化选型结论 方案是Arouter+auto-register+自己造轮子补充 原因：arouter使用简单，可以做组件间解耦， auto-register 解决了arouter加载组件是反射效率低下问题。原理asm修改字节码 ####2、其他组件方案对比 ######1、美团猫眼电影android模块化实战 可以学习到的思想 1、无入侵..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://upload-images.jianshu.io/upload_images/5526061-8edba5ea1e96d7c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第2章-组件化选型\\",\\"image\\":[\\"https://upload-images.jianshu.io/upload_images/5526061-8edba5ea1e96d7c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":3.72,"words":1116},"filePathRelative":"fe/android/Android组件化/第2章-组件化选型.md","localizedDate":"2024年3月24日","excerpt":"<p>####1、组件化选型结论\\n<code>方案是Arouter+auto-register+自己造轮子补充</code>\\n原因：arouter使用简单，可以做组件间解耦，\\nauto-register 解决了arouter加载组件是反射效率低下问题。原理asm修改字节码</p>\\n<p>####2、其他组件方案对比\\n######1、<a href=\\"https://www.jianshu.com/p/d372cc6802e5\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">美团猫眼电影android模块化实战</a>\\n可以学习到的思想\\n1、无入侵式配置各种服务\\n采用serviceload\\n缺点：\\n最重要一点：无代码示例\\n1、serviceload (SPI)对于用户来讲不易使用\\n2、无论spi还是arouter，都不能解决配置下沉到base，不如使用arouter\\n3、最好解决方案还是\\"腾讯.api方案\\"</p>","autoDesc":true}');export{ee as comp,te as data};
