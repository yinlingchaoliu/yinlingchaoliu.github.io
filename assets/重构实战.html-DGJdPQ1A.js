import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as c,c as s,a as e,b as t,d as r}from"./app-CtvCwAmI.js";const p={},i={href:"https://www.jianshu.com/p/3327d42ca1c0",target:"_blank",rel:"noopener noreferrer"},l=e("p",null,"#####1、原则 1、无重复代码 2、单一职责 3、测试驱动",-1),h=e("p",null,"#####2、重构的时机 1、添加功能， 2、修补错误(bug)， 3、复审代码",-1),_=e("p",null,'#####3、"坏味道"的代码 1、重复代码 2、过长函数 3、过大的类（class） 4、过长参数列表 5、一个类需多处修改 6、一个变化多个类修改 7、一个函数过多依赖其他类 8、一团功能相似变量 9、switch 代码段 10、平行继承 11、冗余类，删除 12、过度设计、值得才设计 13、临时字段多 14、函数链过长 15、委托（类）函数过度 16、两个类关系过于紧密，用代理解决 17、相同功能函数 18、类库复用即可，不必完美 19、采用EntityClass 20、被拒绝的遗赠 21、过多注释，代码是最好的注释！',-1),m=e("p",null,"#####4、常用重构手法 1、提取子函数 2、上移函数到父类 3、下移函数到子类 4、封装固定调用逻辑 5、使用泛型去除重复逻辑 6、使用对象避免过多参数 7、转移函数--单一职责 8、将类型码转为状态模式 9、NullObject模式 10、分解胖型类",-1),d=e("strong",null,"详见",-1),E={href:"https://www.jianshu.com/p/ac755f20f080",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.jianshu.com/p/041c7fdef067",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.jianshu.com/p/18a78b08bf3c",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.jianshu.com/p/3e58c6f79364",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.jianshu.com/p/a1fe76808aae",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.jianshu.com/p/a86972c48c8f",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,"#####5、重构修改清单 1）记录命名，建造重构词汇表，统一名称规范 2）记录重构手法与情景映射，关联 3）记录重构原因：为什么（why） 4）记录修改清单 5）重构和修改功能是两件事，一件事做完，再处理另一件事",-1);function A(k,j){const n=a("ExternalLinkIcon");return c(),s("div",null,[e("p",null,[t("#####重构实战： 1、本文把常用坏味道，重构手法列出，用于解决工作日常80%问题 2、降低重构带来的开销 "),e("a",i,[t("影响项目重构现实因素及解决方案"),r(n)])]),l,h,_,m,e("p",null,[d,t(" 1、"),e("a",E,[t("重新组织函数"),r(n)]),t(" 2、"),e("a",u,[t("在对象之间搬移特性"),r(n)]),t(" 3、"),e("a",f,[t("重新组织数据"),r(n)]),t(" 4、"),e("a",w,[t("简化条件表达式"),r(n)]),t(" 5、"),e("a",g,[t("处理继承关系"),r(n)]),t(" 6、"),e("a",b,[t("大型重构"),r(n)])]),y])}const x=o(p,[["render",A],["__file","重构实战.html.vue"]]),N=JSON.parse('{"path":"/basis/refactor/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/%E9%87%8D%E6%9E%84%E5%AE%9E%E6%88%98.html","title":"重构实战","lang":"zh-CN","frontmatter":{"title":"重构实战","date":"2024-03-24T11:47:50.000Z","category":["重构-改善代码设计"],"tag":["archive"],"description":"#####重构实战： 1、本文把常用坏味道，重构手法列出，用于解决工作日常80%问题 2、降低重构带来的开销 影响项目重构现实因素及解决方案 #####1、原则 1、无重复代码 2、单一职责 3、测试驱动 #####2、重构的时机 1、添加功能， 2、修补错误(bug)， 3、复审代码 #####3、\\"坏味道\\"的代码 1、重复代码 2、过长函数 3、过...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/refactor/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/%E9%87%8D%E6%9E%84%E5%AE%9E%E6%88%98.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"重构实战"}],["meta",{"property":"og:description","content":"#####重构实战： 1、本文把常用坏味道，重构手法列出，用于解决工作日常80%问题 2、降低重构带来的开销 影响项目重构现实因素及解决方案 #####1、原则 1、无重复代码 2、单一职责 3、测试驱动 #####2、重构的时机 1、添加功能， 2、修补错误(bug)， 3、复审代码 #####3、\\"坏味道\\"的代码 1、重复代码 2、过长函数 3、过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"重构实战\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.74,"words":523},"filePathRelative":"basis/refactor/重构-改善代码设计/重构实战.md","localizedDate":"2024年3月24日","excerpt":"<p>#####重构实战：\\n1、本文把常用坏味道，重构手法列出，用于解决工作日常80%问题\\n2、降低重构带来的开销\\n<a href=\\"https://www.jianshu.com/p/3327d42ca1c0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">影响项目重构现实因素及解决方案</a></p>\\n<p>#####1、原则\\n1、无重复代码\\n2、单一职责\\n3、测试驱动</p>\\n<p>#####2、重构的时机\\n1、添加功能，\\n2、修补错误(bug)，\\n3、复审代码</p>\\n<p>#####3、\\"坏味道\\"的代码\\n1、重复代码\\n2、过长函数\\n3、过大的类（class）\\n4、过长参数列表\\n5、一个类需多处修改\\n6、一个变化多个类修改\\n7、一个函数过多依赖其他类\\n8、一团功能相似变量\\n9、switch 代码段\\n10、平行继承\\n11、冗余类，删除\\n12、过度设计、值得才设计\\n13、临时字段多\\n14、函数链过长\\n15、委托（类）函数过度\\n16、两个类关系过于紧密，用代理解决\\n17、相同功能函数\\n18、类库复用即可，不必完美\\n19、采用EntityClass\\n20、被拒绝的遗赠\\n21、过多注释，代码是最好的注释！</p>","autoDesc":true}');export{x as comp,N as data};
