import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-CtvCwAmI.js";const e="/assets/classfile-Ce5cVWmi.png",p={},c=t(`<h3 id="知识扩展" tabindex="-1"><a class="header-anchor" href="#知识扩展"><span>知识扩展</span></a></h3><p>class文件有严格规范，保障了“编写一次，四处运行”，但是加载class文件来源，给予足够自由</p><p>javap工具 可以反编译class文件，对应图形化工具classpy</p><p>go语言 函数名大写外部可以访问，小写不可以访问</p><h3 id="classfile结构体" tabindex="-1"><a class="header-anchor" href="#classfile结构体"><span>classFile结构体</span></a></h3><p>jvm规范</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">/*
ClassFile {
    u4             magic;
    u2             minor_version;
    u2             major_version;
    u2             constant_pool_count;
    cp_info        constant_pool[constant_pool_count-1];
    u2             access_flags;
    u2             this_class;
    u2             super_class;
    u2             interfaces_count;
    u2             interfaces[interfaces_count];
    u2             fields_count;
    field_info     fields[fields_count];
    u2             methods_count;
    method_info    methods[methods_count];
    u2             attributes_count;
    attribute_info attributes[attributes_count];
}
*/</span>

<span class="token keyword">type</span> ClassFile <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	magic        <span class="token builtin">uint32</span>          <span class="token comment">// 魔数</span>
	minorVersion <span class="token builtin">uint16</span>          <span class="token comment">// 次版本号</span>
	majorVersion <span class="token builtin">uint16</span>          <span class="token comment">// 主版本号</span>
	constantPool ConstantPool    <span class="token comment">// 常量池</span>
	accessFlags  <span class="token builtin">uint16</span>          <span class="token comment">// 类访问标志</span>
	thisClass    <span class="token builtin">uint16</span>          <span class="token comment">// 类常量池索引</span>
	superClass   <span class="token builtin">uint16</span>          <span class="token comment">// 父类常量池索引（只有Object为0）</span>
	interfaces   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint16</span>        <span class="token comment">// 接口常量池索引表</span>
	fields       <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MemberInfo   <span class="token comment">// 字段表</span>
	methods      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MemberInfo   <span class="token comment">// 方法表</span>
	attributes   <span class="token punctuation">[</span><span class="token punctuation">]</span>AttributeInfo <span class="token comment">// 属性表</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="魔数" tabindex="-1"><a class="header-anchor" href="#魔数"><span>魔数</span></a></h3><p>文件格式必须以某个固定字节开头</p><p>class文件 0xCAFEBABE</p><p>PDF文件 %PDF</p><p>ZIP文件 PK</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>ClassFile<span class="token punctuation">)</span> <span class="token function">readAndCheckMagic</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>ClassReader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	magic <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">readUint32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 读取魔数</span>
	<span class="token keyword">if</span> magic <span class="token operator">!=</span> <span class="token number">0xCAFEBABE</span> <span class="token punctuation">{</span> <span class="token comment">// 检查魔数</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.ClassFormatError: magic!&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本号" tabindex="-1"><a class="header-anchor" href="#版本号"><span>版本号</span></a></h3><table><thead><tr><th>java版本</th><th>class版本号</th></tr></thead><tbody><tr><td>JDK1.0.2</td><td>45.0~45.3</td></tr><tr><td>JDK1.1</td><td>45.0~45.65535</td></tr><tr><td>J2SE1.2</td><td>46.0</td></tr><tr><td>J2SE1.3</td><td>47.0</td></tr><tr><td>J2SE1.4</td><td>48.0</td></tr><tr><td>JAVA SE 5.0</td><td>49.0</td></tr><tr><td>JAVA SE 6</td><td>50.0</td></tr><tr><td>JAVA SE 7</td><td>51.0</td></tr><tr><td>JAVA SE 8</td><td>52.0</td></tr></tbody></table><p>说明1.2之前采用主次版本号，从1.2之后，次版本号为0 jdk8 支持检测</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 读取并检查主次版本号</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>ClassFile<span class="token punctuation">)</span> <span class="token function">readAndCheckVersion</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>ClassReader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	self<span class="token punctuation">.</span>minorVersion <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 次版本号</span>
	self<span class="token punctuation">.</span>majorVersion <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 主版本号</span>
	<span class="token keyword">switch</span> self<span class="token punctuation">.</span>majorVersion <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token number">45</span><span class="token punctuation">:</span> <span class="token comment">// jdk1.0 ~ jdk1.1，次版本号不为0</span>
		<span class="token keyword">return</span>
	<span class="token keyword">case</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">:</span> <span class="token comment">// jdk1.2 ~ jdk10，此版本号都为0</span>
		<span class="token keyword">if</span> self<span class="token punctuation">.</span>minorVersion <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.UnsupportedClassVersionError!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字段和方法表" tabindex="-1"><a class="header-anchor" href="#字段和方法表"><span>字段和方法表</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> MemberInfo <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	accessFlags     <span class="token builtin">uint16</span> <span class="token comment">// 字段或方法的访问标志</span>
	nameIndex       <span class="token builtin">uint16</span> <span class="token comment">// 字段名或方法名的常量池索引</span>
	descriptorIndex <span class="token builtin">uint16</span> <span class="token comment">// 字段或方法的描述符常量池索引</span>
	attributes      <span class="token punctuation">[</span><span class="token punctuation">]</span>AttributeInfo

	cp ConstantPool
<span class="token punctuation">}</span>

<span class="token comment">//属性</span>
<span class="token keyword">type</span> AttributeInfo <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">readInfo</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>ClassReader<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解析classfile" tabindex="-1"><a class="header-anchor" href="#解析classfile"><span>解析classfile</span></a></h3><figure><img src="`+e+`" alt="classfile" tabindex="0" loading="lazy"><figcaption>classfile</figcaption></figure><h3 id="从byte数组树化classfile" tabindex="-1"><a class="header-anchor" href="#从byte数组树化classfile"><span>从byte数组树化ClassFile</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 将 []byte 转换成 ClassFile</span>
<span class="token keyword">func</span> <span class="token function">Parse</span><span class="token punctuation">(</span>classData <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>cf <span class="token operator">*</span>ClassFile<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cr <span class="token operator">:=</span> <span class="token operator">&amp;</span>ClassReader<span class="token punctuation">{</span>classData<span class="token punctuation">}</span>
	cf <span class="token operator">=</span> <span class="token operator">&amp;</span>ClassFile<span class="token punctuation">{</span><span class="token punctuation">}</span>
	cf<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>cr<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token comment">// 使用 ClassReader 从 ClassReader 中读取内容，赋值给 ClassFile 的各个属性</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>ClassFile<span class="token punctuation">)</span> <span class="token function">read</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>ClassReader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	self<span class="token punctuation">.</span><span class="token function">readAndCheckMagic</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span><span class="token function">readAndCheckVersion</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>constantPool <span class="token operator">=</span> <span class="token function">readConstantPool</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>accessFlags <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>thisClass <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>superClass <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>interfaces <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readUint16s</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>fields <span class="token operator">=</span> <span class="token function">readMembers</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> self<span class="token punctuation">.</span>constantPool<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>methods <span class="token operator">=</span> <span class="token function">readMembers</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> self<span class="token punctuation">.</span>constantPool<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>attributes <span class="token operator">=</span> <span class="token function">readAttributes</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> self<span class="token punctuation">.</span>constantPool<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实战项目地址" tabindex="-1"><a class="header-anchor" href="#实战项目地址"><span>实战项目地址</span></a></h3><p>https://gitee.com/yinlingchaoliu/jvmgo.git</p><p>提交标签classfile</p>`,26),o=[c];function l(i,u){return s(),a("div",null,o)}const k=n(p,[["render",l],["__file","5、解析classfile文件.html.vue"]]),m=JSON.parse('{"path":"/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/5%E3%80%81%E8%A7%A3%E6%9E%90classfile%E6%96%87%E4%BB%B6.html","title":"5、解析classfile文件","lang":"zh-CN","frontmatter":{"title":"5、解析classfile文件","date":"2024-04-10T06:06:06.000Z","category":["手动编写jvm虚拟机"],"tag":["jvmgo"],"description":"知识扩展 class文件有严格规范，保障了“编写一次，四处运行”，但是加载class文件来源，给予足够自由 javap工具 可以反编译class文件，对应图形化工具classpy go语言 函数名大写外部可以访问，小写不可以访问 classFile结构体 jvm规范 魔数 文件格式必须以某个固定字节开头 class文件 0xCAFEBABE PDF文件...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/5%E3%80%81%E8%A7%A3%E6%9E%90classfile%E6%96%87%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"5、解析classfile文件"}],["meta",{"property":"og:description","content":"知识扩展 class文件有严格规范，保障了“编写一次，四处运行”，但是加载class文件来源，给予足够自由 javap工具 可以反编译class文件，对应图形化工具classpy go语言 函数名大写外部可以访问，小写不可以访问 classFile结构体 jvm规范 魔数 文件格式必须以某个固定字节开头 class文件 0xCAFEBABE PDF文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T22:43:38.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"jvmgo"}],["meta",{"property":"article:published_time","content":"2024-04-10T06:06:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-09T22:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5、解析classfile文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-10T06:06:06.000Z\\",\\"dateModified\\":\\"2024-04-09T22:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[{"level":3,"title":"知识扩展","slug":"知识扩展","link":"#知识扩展","children":[]},{"level":3,"title":"classFile结构体","slug":"classfile结构体","link":"#classfile结构体","children":[]},{"level":3,"title":"魔数","slug":"魔数","link":"#魔数","children":[]},{"level":3,"title":"版本号","slug":"版本号","link":"#版本号","children":[]},{"level":3,"title":"字段和方法表","slug":"字段和方法表","link":"#字段和方法表","children":[]},{"level":3,"title":"解析classfile","slug":"解析classfile","link":"#解析classfile","children":[]},{"level":3,"title":"从byte数组树化ClassFile","slug":"从byte数组树化classfile","link":"#从byte数组树化classfile","children":[]},{"level":3,"title":"实战项目地址","slug":"实战项目地址","link":"#实战项目地址","children":[]}],"git":{"createdTime":1711376238000,"updatedTime":1712702618000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":2}]},"readingTime":{"minutes":2.01,"words":604},"filePathRelative":"basis/jvm/手动编写jvm虚拟机/5、解析classfile文件.md","localizedDate":"2024年4月10日","excerpt":"<h3>知识扩展</h3>\\n<p>class文件有严格规范，保障了“编写一次，四处运行”，但是加载class文件来源，给予足够自由</p>\\n<p>javap工具 可以反编译class文件，对应图形化工具classpy</p>\\n<p>go语言 函数名大写外部可以访问，小写不可以访问</p>\\n<h3>classFile结构体</h3>\\n<p>jvm规范</p>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">/*\\nClassFile {\\n    u4             magic;\\n    u2             minor_version;\\n    u2             major_version;\\n    u2             constant_pool_count;\\n    cp_info        constant_pool[constant_pool_count-1];\\n    u2             access_flags;\\n    u2             this_class;\\n    u2             super_class;\\n    u2             interfaces_count;\\n    u2             interfaces[interfaces_count];\\n    u2             fields_count;\\n    field_info     fields[fields_count];\\n    u2             methods_count;\\n    method_info    methods[methods_count];\\n    u2             attributes_count;\\n    attribute_info attributes[attributes_count];\\n}\\n*/</span>\\n\\n<span class=\\"token keyword\\">type</span> ClassFile <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tmagic        <span class=\\"token builtin\\">uint32</span>          <span class=\\"token comment\\">// 魔数</span>\\n\\tminorVersion <span class=\\"token builtin\\">uint16</span>          <span class=\\"token comment\\">// 次版本号</span>\\n\\tmajorVersion <span class=\\"token builtin\\">uint16</span>          <span class=\\"token comment\\">// 主版本号</span>\\n\\tconstantPool ConstantPool    <span class=\\"token comment\\">// 常量池</span>\\n\\taccessFlags  <span class=\\"token builtin\\">uint16</span>          <span class=\\"token comment\\">// 类访问标志</span>\\n\\tthisClass    <span class=\\"token builtin\\">uint16</span>          <span class=\\"token comment\\">// 类常量池索引</span>\\n\\tsuperClass   <span class=\\"token builtin\\">uint16</span>          <span class=\\"token comment\\">// 父类常量池索引（只有Object为0）</span>\\n\\tinterfaces   <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">uint16</span>        <span class=\\"token comment\\">// 接口常量池索引表</span>\\n\\tfields       <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">*</span>MemberInfo   <span class=\\"token comment\\">// 字段表</span>\\n\\tmethods      <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">*</span>MemberInfo   <span class=\\"token comment\\">// 方法表</span>\\n\\tattributes   <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>AttributeInfo <span class=\\"token comment\\">// 属性表</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,m as data};
