import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,a}from"./app-CtvCwAmI.js";const o={},r=a("p",null,"原则：数据清晰，含义明确 1）自封装字段 要点：get set 取数据 2）以对象取代数据值 要点：你有一个数据项，需要与其他数据和行为一起使用才有意义 3）将值对象改为引用对象 （单例） 要点：你从一个类衍生许多彼此相等的实例，希望将他们替换成同一个对象 4）以对象取代数据 要点：你有一个数组，其中各个元素各自代表不同的东西 5）复制“被监视数据” 要点：观察者同步数据 为了做分层 mvc模式 6）将单项关联改为双向关联（反向指针） 要点：两个类都需要使用对方特性，但其间有一个单项链接 7）将双向关联变为单项 要点：去掉不必要关联 8）以字面常亮取代魔法数（常量） 要点：你有一个字面数值，带有特别含义 9）封装字段 要点：你的类存在一个public字段 10）封装集合 要点：有个函数返回集合（set,map） 方案：增加操作集合的函数，不直接处理 11）以类取代类型码 要点：方便数据类型校验 12）以子类取代类型码 要点：子类集成 重写增加灵活性 13）以State/Strategy取代类型码 要点：你有一个类型码，它会影响类的行为，但你无法通过继承手法消除它 方案：策略模式，状态模式，以状态对象取代类型码 14）以字段取代子类 要点：你的各个子类的唯一差别只在“返回常量数据”的函数身上 方案：修改这些函数，使它们返回超类中的某个（新增）字段，然后销毁子类",-1),c=[r];function i(p,s){return e(),n("div",null,c)}const E=t(o,[["render",i],["__file","重新组织数据.html.vue"]]),d=JSON.parse('{"path":"/basis/refactor/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/%E9%87%8D%E6%96%B0%E7%BB%84%E7%BB%87%E6%95%B0%E6%8D%AE.html","title":"重新组织数据","lang":"zh-CN","frontmatter":{"title":"重新组织数据","date":"2024-03-24T11:47:50.000Z","category":["重构-改善代码设计"],"tag":["archive"],"description":"原则：数据清晰，含义明确 1）自封装字段 要点：get set 取数据 2）以对象取代数据值 要点：你有一个数据项，需要与其他数据和行为一起使用才有意义 3）将值对象改为引用对象 （单例） 要点：你从一个类衍生许多彼此相等的实例，希望将他们替换成同一个对象 4）以对象取代数据 要点：你有一个数组，其中各个元素各自代表不同的东西 5）复制“被监视数据” ...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/refactor/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/%E9%87%8D%E6%96%B0%E7%BB%84%E7%BB%87%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"重新组织数据"}],["meta",{"property":"og:description","content":"原则：数据清晰，含义明确 1）自封装字段 要点：get set 取数据 2）以对象取代数据值 要点：你有一个数据项，需要与其他数据和行为一起使用才有意义 3）将值对象改为引用对象 （单例） 要点：你从一个类衍生许多彼此相等的实例，希望将他们替换成同一个对象 4）以对象取代数据 要点：你有一个数组，其中各个元素各自代表不同的东西 5）复制“被监视数据” ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"重新组织数据\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.61,"words":483},"filePathRelative":"basis/refactor/重构-改善代码设计/重新组织数据.md","localizedDate":"2024年3月24日","excerpt":"<p>原则：数据清晰，含义明确\\n1）自封装字段\\n要点：get set 取数据\\n2）以对象取代数据值\\n要点：你有一个数据项，需要与其他数据和行为一起使用才有意义\\n3）将值对象改为引用对象 （单例）\\n要点：你从一个类衍生许多彼此相等的实例，希望将他们替换成同一个对象\\n4）以对象取代数据\\n要点：你有一个数组，其中各个元素各自代表不同的东西\\n5）复制“被监视数据”\\n要点：观察者同步数据 为了做分层 mvc模式\\n6）将单项关联改为双向关联（反向指针）\\n要点：两个类都需要使用对方特性，但其间有一个单项链接\\n7）将双向关联变为单项\\n要点：去掉不必要关联\\n8）以字面常亮取代魔法数（常量）\\n要点：你有一个字面数值，带有特别含义\\n9）封装字段\\n要点：你的类存在一个public字段\\n10）封装集合\\n要点：有个函数返回集合（set,map）\\n方案：增加操作集合的函数，不直接处理\\n11）以类取代类型码\\n要点：方便数据类型校验\\n12）以子类取代类型码\\n要点：子类集成 重写增加灵活性\\n13）以State/Strategy取代类型码\\n要点：你有一个类型码，它会影响类的行为，但你无法通过继承手法消除它\\n方案：策略模式，状态模式，以状态对象取代类型码\\n14）以字段取代子类\\n要点：你的各个子类的唯一差别只在“返回常量数据”的函数身上\\n方案：修改这些函数，使它们返回超类中的某个（新增）字段，然后销毁子类</p>","autoDesc":true}');export{E as comp,d as data};
