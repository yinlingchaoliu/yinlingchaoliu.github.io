import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-CtvCwAmI.js";const p={},e=t(`<h4 id="_1、定义" tabindex="-1"><a class="header-anchor" href="#_1、定义"><span>1、定义</span></a></h4><p><code>享元模式：通过共享技术来有效支持大量细粒度对象</code></p><h4 id="写法" tabindex="-1"><a class="header-anchor" href="#写法"><span>写法</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Ticket</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">showTicketInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> bunk<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TrainTicket</span> <span class="token keyword">implements</span> <span class="token class-name">Ticket</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> from<span class="token punctuation">;</span> <span class="token comment">// 始发地</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">;</span> <span class="token comment">// 目的地</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> bunk<span class="token punctuation">;</span> <span class="token comment">//铺位</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> price<span class="token punctuation">;</span> <span class="token comment">//价格</span>

    <span class="token keyword">public</span> <span class="token class-name">TrainTicket</span><span class="token punctuation">(</span><span class="token class-name">String</span> from<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>from <span class="token operator">=</span> from<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">to</span> <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showTicketInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> bunk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        price <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;购买 从 &quot;</span> <span class="token operator">+</span> from <span class="token operator">+</span> <span class="token string">&quot; 到 &quot;</span> <span class="token operator">+</span> <span class="token keyword">to</span> <span class="token operator">+</span> <span class="token string">&quot;的&quot;</span> <span class="token operator">+</span> bunk <span class="token operator">+</span> <span class="token string">&quot;火车票&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, 价格：&quot;</span> <span class="token operator">+</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TicketFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Ticket</span><span class="token punctuation">&gt;</span></span> sTicketMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Ticket</span> <span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token class-name">String</span> from <span class="token punctuation">,</span><span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> from <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>sTicketMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;使用缓存 ==&gt; &quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> sTicketMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;创建对象 ==&gt; &quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Ticket</span> ticket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrainTicket</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sTicketMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> ticket<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> ticket<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 *
 * 享元模式
 * eg: message , 线程池，连接池
 * 共享池
 *
 * 大大减少应用程序创建的对象，降低程序内存的占用，增强程序的性能
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMain</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">Ticket</span> ticket01 <span class="token operator">=</span> <span class="token class-name">TicketFactory</span><span class="token punctuation">.</span><span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;青岛&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ticket01<span class="token punctuation">.</span><span class="token function">showTicketInfo</span><span class="token punctuation">(</span><span class="token string">&quot;上铺&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ticket</span> ticket02 <span class="token operator">=</span> <span class="token class-name">TicketFactory</span><span class="token punctuation">.</span><span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;青岛&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ticket02<span class="token punctuation">.</span><span class="token function">showTicketInfo</span><span class="token punctuation">(</span><span class="token string">&quot;下铺&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ticket</span> ticket03 <span class="token operator">=</span> <span class="token class-name">TicketFactory</span><span class="token punctuation">.</span><span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;西安&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ticket03<span class="token punctuation">.</span><span class="token function">showTicketInfo</span><span class="token punctuation">(</span><span class="token string">&quot;坐票&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h4><p>https://github.com/yinlingchaoliu/23-design-pattern</p>`,6),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","设计模式-结构型-享元模式.html.vue"]]),d=JSON.parse('{"path":"/basis/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B-%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html","title":"设计模式-结构型-享元模式","lang":"zh-CN","frontmatter":{"title":"设计模式-结构型-享元模式","date":"2024-03-24T11:47:50.000Z","category":["设计模式"],"tag":["archive"],"description":"1、定义 享元模式：通过共享技术来有效支持大量细粒度对象 写法 代码示例 https://github.com/yinlingchaoliu/23-design-pattern","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/design-pattern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B-%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"设计模式-结构型-享元模式"}],["meta",{"property":"og:description","content":"1、定义 享元模式：通过共享技术来有效支持大量细粒度对象 写法 代码示例 https://github.com/yinlingchaoliu/23-design-pattern"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式-结构型-享元模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":0.91,"words":274},"filePathRelative":"basis/design-pattern/设计模式-结构型-享元模式.md","localizedDate":"2024年3月24日","excerpt":"<h4>1、定义</h4>\\n<p><code>享元模式：通过共享技术来有效支持大量细粒度对象</code></p>\\n<h4>写法</h4>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Ticket</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">showTicketInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> bunk<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TrainTicket</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Ticket</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> from<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 始发地</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 目的地</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> bunk<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//铺位</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> price<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//价格</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">TrainTicket</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> from<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>from <span class=\\"token operator\\">=</span> from<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">to</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">showTicketInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> bunk<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        price <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nextInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">300</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"购买 从 \\"</span> <span class=\\"token operator\\">+</span> from <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\" 到 \\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token keyword\\">to</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"的\\"</span> <span class=\\"token operator\\">+</span> bunk <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"火车票\\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\", 价格：\\"</span> <span class=\\"token operator\\">+</span> price<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TicketFactory</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Map</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">Ticket</span><span class=\\"token punctuation\\">&gt;</span></span> sTicketMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ConcurrentHashMap</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span>  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Ticket</span> <span class=\\"token function\\">getTicket</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> from <span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">String</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">String</span> key <span class=\\"token operator\\">=</span> from <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"-\\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>sTicketMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">containsKey</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"使用缓存 ==&gt; \\"</span> <span class=\\"token operator\\">+</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> sTicketMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"创建对象 ==&gt; \\"</span> <span class=\\"token operator\\">+</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">Ticket</span> ticket <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">TrainTicket</span><span class=\\"token punctuation\\">(</span>from<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">to</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            sTicketMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> ticket<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> ticket<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token doc-comment comment\\">/**\\n *\\n * 享元模式\\n * eg: message , 线程池，连接池\\n * 共享池\\n *\\n * 大大减少应用程序创建的对象，降低程序内存的占用，增强程序的性能\\n *\\n */</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TestMain</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\n        <span class=\\"token class-name\\">Ticket</span> ticket01 <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">TicketFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTicket</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"北京\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"青岛\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        ticket01<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">showTicketInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"上铺\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">Ticket</span> ticket02 <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">TicketFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTicket</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"北京\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"青岛\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        ticket02<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">showTicketInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"下铺\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">Ticket</span> ticket03 <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">TicketFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTicket</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"北京\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"西安\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        ticket03<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">showTicketInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"坐票\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
