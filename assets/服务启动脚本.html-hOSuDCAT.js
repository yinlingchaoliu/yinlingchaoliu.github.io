import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as e}from"./app-CtvCwAmI.js";const t={},p=e(`<h3 id="scp上传免密" tabindex="-1"><a class="header-anchor" href="#scp上传免密"><span>scp上传免密</span></a></h3><p>ry.sh</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token comment"># shellcheck disable=SC2006</span>
<span class="token comment"># shellcheck disable=SC2126</span>
<span class="token comment"># shellcheck disable=SC2046</span>
<span class="token comment"># shellcheck disable=SC2107</span>

<span class="token comment"># author chentong</span>
<span class="token comment"># date: 2024-04-25</span>
<span class="token comment"># ./ry.sh start 启动</span>
<span class="token comment"># ./ry.sh stop 停止</span>
<span class="token comment"># ./ry.sh restart 重启</span>
<span class="token comment"># ./ry.sh status 状态</span>
<span class="token assign-left variable">AppName</span><span class="token operator">=</span>ruoyi-admin.jar

<span class="token comment"># JVM参数</span>
<span class="token assign-left variable">JVM_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Dname=<span class="token variable">$AppName</span>  -Duser.timezone=Asia/Shanghai -Xms512M -Xmx512M -XX:PermSize=256M -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDateStamps  -XX:+PrintGCDetails -XX:NewRatio=1 -XX:SurvivorRatio=30 -XX:+UseParallelGC -XX:+UseParallelOldGC&quot;</span>

<span class="token comment"># PORT DEFAULT 8080</span>
<span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">8080</span>

<span class="token function-name function">banner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;////////////////////////////////////////////////////////////////////&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                          _ooOoo_                               //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                         o8888888o                              //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                         88&quot;</span> <span class="token builtin class-name">.</span> <span class="token string">&quot;88                                //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                         (| ^_^ |)                              //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                         O\\  =  /O                              //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                   /  <span class="token entity" title="\\\\">\\\\</span>|||  :  |||//  \\                         //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                  /  _||||| -:- |||||-  \\                       //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                  |   | <span class="token entity" title="\\\\">\\\\</span>\\  -  /// |   |                         //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//                  | \\_|  &#39;&#39;\\---/&#39;&#39;  |   |                       //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;//             佛祖保佑       永不宕机      永无BUG               //&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;////////////////////////////////////////////////////////////////////&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># error log</span>
<span class="token function-name function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[0;31m<span class="token variable">$1</span><span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># info log</span>
<span class="token function-name function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[0;34m<span class="token variable">$1</span><span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span>error <span class="token string">&quot;  please input command:  &quot;</span><span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>info <span class="token string">&quot;   {start|stop|restart|status|port|banner}  &quot;</span><span class="token variable">)</span></span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;port&quot;</span> <span class="token parameter variable">-a</span> <span class="token variable">$#</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable">$2</span>
<span class="token keyword">fi</span>

<span class="token comment"># get pid</span>
<span class="token function-name function">pid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">java</span> <span class="token operator">|</span> <span class="token function">grep</span> $AppName <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  banner
  <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pid<span class="token variable">)</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    info <span class="token string">&quot;START <span class="token variable">$AppName</span> is running...&quot;</span>
  <span class="token keyword">else</span>
    <span class="token comment">#$JVM_OPTS is not used</span>
    <span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token variable">$AppName</span> <span class="token variable">$JVM_OPTS</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
    info <span class="token string">&quot;START <span class="token variable">$AppName</span> success...&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token function-name function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  error <span class="token string">&quot;STOP <span class="token variable">$AppName</span>&quot;</span>
  <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pid<span class="token variable">)</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">kill</span> <span class="token parameter variable">-TERM</span> <span class="token variable">$PID</span>
    error <span class="token string">&quot;STOP <span class="token variable">$AppName</span> (pid:<span class="token variable">$PID</span>) exiting...&quot;</span>
    <span class="token keyword">while</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
      <span class="token function">sleep</span> <span class="token number">1</span>
      <span class="token comment"># repeat get pid</span>
      <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pid<span class="token variable">)</span></span>
    <span class="token keyword">done</span>
    error <span class="token string">&quot;STOP <span class="token variable">$AppName</span> stopped&quot;</span>
  <span class="token keyword">else</span>
    error <span class="token string">&quot;STOP <span class="token variable">$AppName</span> already stopped.&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  info <span class="token string">&quot;RESTART <span class="token variable">$AppName</span> begin&quot;</span>
  stop
  <span class="token function">sleep</span> <span class="token number">2</span>
  start
  status
  info <span class="token string">&quot;RESTART <span class="token variable">$AppName</span> end&quot;</span>
<span class="token punctuation">}</span>

<span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pid<span class="token variable">)</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    info <span class="token string">&quot;STATUS <span class="token variable">$AppName</span> is running...&quot;</span>
  <span class="token keyword">else</span>
    error <span class="token string">&quot;STATUS <span class="token variable">$AppName</span> is not running...&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># kill by port</span>
<span class="token function-name function">port</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">lsof</span> -i:<span class="token variable">$PORT</span> <span class="token operator">|</span> <span class="token function">grep</span> LISTEN <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span>
  error <span class="token string">&quot;PORT <span class="token variable">$PORT</span> is killed&quot;</span>
  status
<span class="token punctuation">}</span>

<span class="token comment"># shell main method</span>
<span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>
start<span class="token punctuation">)</span>
  start<span class="token punctuation">;</span><span class="token punctuation">;</span>
stop<span class="token punctuation">)</span>
  stop<span class="token punctuation">;</span><span class="token punctuation">;</span>
restart<span class="token punctuation">)</span>
  restart<span class="token punctuation">;</span><span class="token punctuation">;</span>
status<span class="token punctuation">)</span>
  status<span class="token punctuation">;</span><span class="token punctuation">;</span>
port<span class="token punctuation">)</span>
  port<span class="token punctuation">;</span><span class="token punctuation">;</span>
banner<span class="token punctuation">)</span>
  banner<span class="token punctuation">;</span><span class="token punctuation">;</span>
*<span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function l(c,i){return s(),a("div",null,o)}const k=n(t,[["render",l],["__file","服务启动脚本.html.vue"]]),v=JSON.parse(`{"path":"/server/env/%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC.html","title":"服务启动脚本","lang":"zh-CN","frontmatter":{"title":"服务启动脚本","date":"2024-03-24T11:47:50.000Z","order":13,"category":["server"],"tag":["env"],"description":"scp上传免密 ry.sh","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/server/env/%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"服务启动脚本"}],["meta",{"property":"og:description","content":"scp上传免密 ry.sh"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-25T10:39:24.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"env"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-25T10:39:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务启动脚本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-04-25T10:39:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[{"level":3,"title":"scp上传免密","slug":"scp上传免密","link":"#scp上传免密","children":[]}],"git":{"createdTime":1714041564000,"updatedTime":1714041564000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.27,"words":382},"filePathRelative":"server/env/服务启动脚本.md","localizedDate":"2024年3月24日","excerpt":"<h3>scp上传免密</h3>\\n<p>ry.sh</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token shebang important\\">#!/bin/sh</span>\\n<span class=\\"token comment\\"># shellcheck disable=SC2006</span>\\n<span class=\\"token comment\\"># shellcheck disable=SC2126</span>\\n<span class=\\"token comment\\"># shellcheck disable=SC2046</span>\\n<span class=\\"token comment\\"># shellcheck disable=SC2107</span>\\n\\n<span class=\\"token comment\\"># author chentong</span>\\n<span class=\\"token comment\\"># date: 2024-04-25</span>\\n<span class=\\"token comment\\"># ./ry.sh start 启动</span>\\n<span class=\\"token comment\\"># ./ry.sh stop 停止</span>\\n<span class=\\"token comment\\"># ./ry.sh restart 重启</span>\\n<span class=\\"token comment\\"># ./ry.sh status 状态</span>\\n<span class=\\"token assign-left variable\\">AppName</span><span class=\\"token operator\\">=</span>ruoyi-admin.jar\\n\\n<span class=\\"token comment\\"># JVM参数</span>\\n<span class=\\"token assign-left variable\\">JVM_OPTS</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"-Dname=<span class=\\"token variable\\">$AppName</span>  -Duser.timezone=Asia/Shanghai -Xms512M -Xmx512M -XX:PermSize=256M -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDateStamps  -XX:+PrintGCDetails -XX:NewRatio=1 -XX:SurvivorRatio=30 -XX:+UseParallelGC -XX:+UseParallelOldGC\\"</span>\\n\\n<span class=\\"token comment\\"># PORT DEFAULT 8080</span>\\n<span class=\\"token assign-left variable\\">PORT</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">8080</span>\\n\\n<span class=\\"token function-name function\\">banner</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"////////////////////////////////////////////////////////////////////\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                          _ooOoo_                               //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                         o8888888o                              //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                         88\\"</span> <span class=\\"token builtin class-name\\">.</span> <span class=\\"token string\\">\\"88                                //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                         (| ^_^ |)                              //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                         O\\\\  =  /O                              //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                   /  <span class=\\"token entity\\" title=\\"\\\\\\\\\\">\\\\\\\\</span>|||  :  |||//  \\\\                         //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                  /  _||||| -:- |||||-  \\\\                       //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                  |   | <span class=\\"token entity\\" title=\\"\\\\\\\\\\">\\\\\\\\</span>\\\\  -  /// |   |                         //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//                  | \\\\_|  ''\\\\---/''  |   |                       //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"//             佛祖保佑       永不宕机      永无BUG               //\\"</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"////////////////////////////////////////////////////////////////////\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\"># error log</span>\\n<span class=\\"token function-name function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"<span class=\\"token entity\\" title=\\"\\\\033\\">\\\\033</span>[0;31m<span class=\\"token variable\\">$1</span><span class=\\"token entity\\" title=\\"\\\\033\\">\\\\033</span>[0m\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\"># info log</span>\\n<span class=\\"token function-name function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"<span class=\\"token entity\\" title=\\"\\\\033\\">\\\\033</span>[0;34m<span class=\\"token variable\\">$1</span><span class=\\"token entity\\" title=\\"\\\\033\\">\\\\033</span>[0m\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$1</span>\\"</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>error <span class=\\"token string\\">\\"  please input command:  \\"</span><span class=\\"token variable\\">)</span></span> <span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>info <span class=\\"token string\\">\\"   {start|stop|restart|status|port|banner}  \\"</span><span class=\\"token variable\\">)</span></span>\\n  <span class=\\"token builtin class-name\\">exit</span> <span class=\\"token number\\">1</span>\\n<span class=\\"token keyword\\">fi</span>\\n\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$1</span>\\"</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"port\\"</span> <span class=\\"token parameter variable\\">-a</span> <span class=\\"token variable\\">$#</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n  <span class=\\"token assign-left variable\\">PORT</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\">$2</span>\\n<span class=\\"token keyword\\">fi</span>\\n\\n<span class=\\"token comment\\"># get pid</span>\\n<span class=\\"token function-name function\\">pid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token assign-left variable\\">PID</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">ps</span> <span class=\\"token parameter variable\\">-ef</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> <span class=\\"token function\\">java</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> $AppName <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> <span class=\\"token parameter variable\\">-v</span> <span class=\\"token function\\">grep</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">awk</span> <span class=\\"token string\\">'{print $2}'</span><span class=\\"token variable\\">)</span></span>\\n  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$PID</span>\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function-name function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  banner\\n  <span class=\\"token assign-left variable\\">PID</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>pid<span class=\\"token variable\\">)</span></span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> x<span class=\\"token string\\">\\"<span class=\\"token variable\\">$PID</span>\\"</span> <span class=\\"token operator\\">!=</span> x<span class=\\"token string\\">\\"\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n    info <span class=\\"token string\\">\\"START <span class=\\"token variable\\">$AppName</span> is running...\\"</span>\\n  <span class=\\"token keyword\\">else</span>\\n    <span class=\\"token comment\\">#$JVM_OPTS is not used</span>\\n    <span class=\\"token function\\">nohup</span> <span class=\\"token function\\">java</span> <span class=\\"token parameter variable\\">-jar</span> <span class=\\"token variable\\">$AppName</span> <span class=\\"token variable\\">$JVM_OPTS</span> <span class=\\"token operator\\">&gt;</span>/dev/null <span class=\\"token operator\\"><span class=\\"token file-descriptor important\\">2</span>&gt;</span><span class=\\"token file-descriptor important\\">&amp;1</span> <span class=\\"token operator\\">&amp;</span>\\n    info <span class=\\"token string\\">\\"START <span class=\\"token variable\\">$AppName</span> success...\\"</span>\\n  <span class=\\"token keyword\\">fi</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function-name function\\">stop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  error <span class=\\"token string\\">\\"STOP <span class=\\"token variable\\">$AppName</span>\\"</span>\\n  <span class=\\"token assign-left variable\\">PID</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>pid<span class=\\"token variable\\">)</span></span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> x<span class=\\"token string\\">\\"<span class=\\"token variable\\">$PID</span>\\"</span> <span class=\\"token operator\\">!=</span> x<span class=\\"token string\\">\\"\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n    <span class=\\"token function\\">kill</span> <span class=\\"token parameter variable\\">-TERM</span> <span class=\\"token variable\\">$PID</span>\\n    error <span class=\\"token string\\">\\"STOP <span class=\\"token variable\\">$AppName</span> (pid:<span class=\\"token variable\\">$PID</span>) exiting...\\"</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">[</span> x<span class=\\"token string\\">\\"<span class=\\"token variable\\">$PID</span>\\"</span> <span class=\\"token operator\\">!=</span> x<span class=\\"token string\\">\\"\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">do</span>\\n      <span class=\\"token function\\">sleep</span> <span class=\\"token number\\">1</span>\\n      <span class=\\"token comment\\"># repeat get pid</span>\\n      <span class=\\"token assign-left variable\\">PID</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>pid<span class=\\"token variable\\">)</span></span>\\n    <span class=\\"token keyword\\">done</span>\\n    error <span class=\\"token string\\">\\"STOP <span class=\\"token variable\\">$AppName</span> stopped\\"</span>\\n  <span class=\\"token keyword\\">else</span>\\n    error <span class=\\"token string\\">\\"STOP <span class=\\"token variable\\">$AppName</span> already stopped.\\"</span>\\n  <span class=\\"token keyword\\">fi</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function-name function\\">restart</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  info <span class=\\"token string\\">\\"RESTART <span class=\\"token variable\\">$AppName</span> begin\\"</span>\\n  stop\\n  <span class=\\"token function\\">sleep</span> <span class=\\"token number\\">2</span>\\n  start\\n  status\\n  info <span class=\\"token string\\">\\"RESTART <span class=\\"token variable\\">$AppName</span> end\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function-name function\\">status</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token assign-left variable\\">PID</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span>pid<span class=\\"token variable\\">)</span></span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> x<span class=\\"token string\\">\\"<span class=\\"token variable\\">$PID</span>\\"</span> <span class=\\"token operator\\">!=</span> x<span class=\\"token string\\">\\"\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n    info <span class=\\"token string\\">\\"STATUS <span class=\\"token variable\\">$AppName</span> is running...\\"</span>\\n  <span class=\\"token keyword\\">else</span>\\n    error <span class=\\"token string\\">\\"STATUS <span class=\\"token variable\\">$AppName</span> is not running...\\"</span>\\n  <span class=\\"token keyword\\">fi</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\"># kill by port</span>\\n<span class=\\"token function-name function\\">port</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">lsof</span> -i:<span class=\\"token variable\\">$PORT</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> LISTEN <span class=\\"token operator\\">|</span> <span class=\\"token function\\">awk</span> <span class=\\"token string\\">'{print $2}'</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">xargs</span> <span class=\\"token function\\">kill</span> <span class=\\"token parameter variable\\">-9</span>\\n  error <span class=\\"token string\\">\\"PORT <span class=\\"token variable\\">$PORT</span> is killed\\"</span>\\n  status\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\"># shell main method</span>\\n<span class=\\"token keyword\\">case</span> <span class=\\"token variable\\">$1</span> <span class=\\"token keyword\\">in</span>\\nstart<span class=\\"token punctuation\\">)</span>\\n  start<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\nstop<span class=\\"token punctuation\\">)</span>\\n  stop<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\nrestart<span class=\\"token punctuation\\">)</span>\\n  restart<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\nstatus<span class=\\"token punctuation\\">)</span>\\n  status<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\nport<span class=\\"token punctuation\\">)</span>\\n  port<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\nbanner<span class=\\"token punctuation\\">)</span>\\n  banner<span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\n*<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">esac</span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,v as data};
