import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as d,c as n,f as e}from"./app-CtvCwAmI.js";const r={},o=e("<p>####1、编写框架涉及技术</p><table><thead><tr><th>组件化涉及技术</th><th>优点</th><th>缺点</th><th>是否选用</th><th>理由</th></tr></thead><tbody><tr><td>serviceload</td><td>调用是接口形式，比较直观</td><td>模块间调用解耦不易</td><td>否</td><td>java的serviceload并不完备，实现多采用反射与效率背道而驰</td></tr><tr><td>weixinapi技术</td><td>解决部分公用代码动态下沉到base</td><td>编写.api要注意分包摆放</td><td>是</td><td>项目稳定后，一般不会有下沉base代码，可以将base抽象成公共库，本作者实现</td></tr><tr><td>组件单独运行和集成发布thorAlone</td><td>编写组件减少他们之间的依赖</td><td>专用sourceSet.main.debug目录，sourceSet项目中用法过于负责慎用</td><td>是</td><td>module间代码隔离,与壳工程隔离</td></tr><tr><td>P工程</td><td>细粒度的解耦，减少module内过度依赖</td><td>一般中小项目中，粒度过于细了</td><td>否</td><td>一般项目多P工程解耦成本太高</td></tr><tr><td>asm</td><td>动态生成字节码效率高</td><td>底层技术编写过于复杂</td><td>是</td><td>参照cc-register，为了效率</td></tr><tr><td>总线模式</td><td>将服务扁平化</td><td>改造CC过于复杂</td><td>是</td><td>本框架采用改造CC，实现扁平化</td></tr><tr><td>RPC</td><td>多进程间通讯快</td><td>涉及远程调用场景不多</td><td>否</td><td>组件化间场景并不多，建议用专门库来实现这个功能</td></tr><tr><td>apt注解</td><td>编译时注解，减少编写过多模板代码</td><td>编写有些复杂，如果不是强烈需要，建议不要</td><td>是</td><td>组件化框架目的就是为了使用者减少不必要代码编写</td></tr><tr><td>反射</td><td>可以hack代码，也可以动态化加载</td><td>运行时效率低下，用户体验差</td><td>否</td><td>尽量少采用反射</td></tr><tr><td>线程池</td><td>避免new Thread方式过于浪费内存资源，复用</td><td>实现有技术成本且慎用</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>",2),a=[o];function i(c,h){return d(),n("div",null,a)}const s=t(r,[["render",i],["__file","第4章-ThorComponent组件化框架(基于CC).html.vue"]]),l=JSON.parse('{"path":"/fe/android/Android%E7%BB%84%E4%BB%B6%E5%8C%96/%E7%AC%AC4%E7%AB%A0-ThorComponent%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A1%86%E6%9E%B6(%E5%9F%BA%E4%BA%8ECC).html","title":"第4章-ThorComponent组件化框架(基于CC)","lang":"zh-CN","frontmatter":{"title":"第4章-ThorComponent组件化框架(基于CC)","date":"2024-03-24T11:47:50.000Z","category":["Android组件化"],"tag":["archive"],"description":"####1、编写框架涉及技术","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/android/Android%E7%BB%84%E4%BB%B6%E5%8C%96/%E7%AC%AC4%E7%AB%A0-ThorComponent%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A1%86%E6%9E%B6(%E5%9F%BA%E4%BA%8ECC).html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"第4章-ThorComponent组件化框架(基于CC)"}],["meta",{"property":"og:description","content":"####1、编写框架涉及技术"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第4章-ThorComponent组件化框架(基于CC)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.6,"words":480},"filePathRelative":"fe/android/Android组件化/第4章-ThorComponent组件化框架(基于CC).md","localizedDate":"2024年3月24日","excerpt":"<p>####1、编写框架涉及技术</p>\\n<table>\\n<thead>\\n<tr>\\n<th>组件化涉及技术</th>\\n<th>优点</th>\\n<th>缺点</th>\\n<th>是否选用</th>\\n<th>理由</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>serviceload</td>\\n<td>调用是接口形式，比较直观</td>\\n<td>模块间调用解耦不易</td>\\n<td>否</td>\\n<td>java的serviceload并不完备，实现多采用反射与效率背道而驰</td>\\n</tr>\\n<tr>\\n<td>weixinapi技术</td>\\n<td>解决部分公用代码动态下沉到base</td>\\n<td>编写.api要注意分包摆放</td>\\n<td>是</td>\\n<td>项目稳定后，一般不会有下沉base代码，可以将base抽象成公共库，本作者实现</td>\\n</tr>\\n<tr>\\n<td>组件单独运行和集成发布thorAlone</td>\\n<td>编写组件减少他们之间的依赖</td>\\n<td>专用sourceSet.main.debug目录，sourceSet项目中用法过于负责慎用</td>\\n<td>是</td>\\n<td>module间代码隔离,与壳工程隔离</td>\\n</tr>\\n<tr>\\n<td>P工程</td>\\n<td>细粒度的解耦，减少module内过度依赖</td>\\n<td>一般中小项目中，粒度过于细了</td>\\n<td>否</td>\\n<td>一般项目多P工程解耦成本太高</td>\\n</tr>\\n<tr>\\n<td>asm</td>\\n<td>动态生成字节码效率高</td>\\n<td>底层技术编写过于复杂</td>\\n<td>是</td>\\n<td>参照cc-register，为了效率</td>\\n</tr>\\n<tr>\\n<td>总线模式</td>\\n<td>将服务扁平化</td>\\n<td>改造CC过于复杂</td>\\n<td>是</td>\\n<td>本框架采用改造CC，实现扁平化</td>\\n</tr>\\n<tr>\\n<td>RPC</td>\\n<td>多进程间通讯快</td>\\n<td>涉及远程调用场景不多</td>\\n<td>否</td>\\n<td>组件化间场景并不多，建议用专门库来实现这个功能</td>\\n</tr>\\n<tr>\\n<td>apt注解</td>\\n<td>编译时注解，减少编写过多模板代码</td>\\n<td>编写有些复杂，如果不是强烈需要，建议不要</td>\\n<td>是</td>\\n<td>组件化框架目的就是为了使用者减少不必要代码编写</td>\\n</tr>\\n<tr>\\n<td>反射</td>\\n<td>可以hack代码，也可以动态化加载</td>\\n<td>运行时效率低下，用户体验差</td>\\n<td>否</td>\\n<td>尽量少采用反射</td>\\n</tr>\\n<tr>\\n<td>线程池</td>\\n<td>避免new Thread方式过于浪费内存资源，复用</td>\\n<td>实现有技术成本且慎用</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{s as comp,l as data};
