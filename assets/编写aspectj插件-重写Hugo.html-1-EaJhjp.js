import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,f as n}from"./app-CtvCwAmI.js";const i={},p=n(`<p>1、前言 Hugo 是JakeWharton写的性能检测框架 原理是利用aspectj Aop切片编程，拦截注解方法，在Around中对方法进行操作</p><p>由于aspectj 引入gradle配置比较麻烦，jakeWharton将注解及对应AspectJ方法实现，和对应插件放在一起。</p><p>我这边是把aspectJ插件专门抽出来，后续再有aop的任务，扩展会比较简单。</p><p>引入aspectj插件方法</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>主build.gradle
apply plugin: &#39;com.chaoliu.aspectj&#39;
aspectj {
    enabled true //注解是否生效
    isCompile true //aspectj是否complie引入
}

buildscript {    
    dependencies {
        classpath fileTree(dir: &#39;plugins&#39;, include: [&#39;*.jar&#39;])
        classpath &#39;org.aspectj:aspectjtools:1.8.6&#39;
     }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>aspectj便引入完毕了。</p><p>DebugLog 没有任何改变，用法不变</p><p>详细见代码 https://github.com/yinlingchaoliu/aspectjx</p>`,8),c=[p];function s(o,r){return t(),a("div",null,c)}const u=e(i,[["render",s],["__file","编写aspectj插件-重写Hugo.html.vue"]]),m=JSON.parse(`{"path":"/fe/android/%E6%A1%86%E6%9E%B6%E7%BC%96%E5%86%99/%E7%BC%96%E5%86%99aspectj%E6%8F%92%E4%BB%B6-%E9%87%8D%E5%86%99Hugo.html","title":"编写aspectj插件-重写Hugo","lang":"zh-CN","frontmatter":{"title":"编写aspectj插件-重写Hugo","date":"2024-03-24T11:47:50.000Z","category":["框架编写分析"],"tag":["archive"],"description":"1、前言 Hugo 是JakeWharton写的性能检测框架 原理是利用aspectj Aop切片编程，拦截注解方法，在Around中对方法进行操作 由于aspectj 引入gradle配置比较麻烦，jakeWharton将注解及对应AspectJ方法实现，和对应插件放在一起。 我这边是把aspectJ插件专门抽出来，后续再有aop的任务，扩展会比较简...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/android/%E6%A1%86%E6%9E%B6%E7%BC%96%E5%86%99/%E7%BC%96%E5%86%99aspectj%E6%8F%92%E4%BB%B6-%E9%87%8D%E5%86%99Hugo.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"编写aspectj插件-重写Hugo"}],["meta",{"property":"og:description","content":"1、前言 Hugo 是JakeWharton写的性能检测框架 原理是利用aspectj Aop切片编程，拦截注解方法，在Around中对方法进行操作 由于aspectj 引入gradle配置比较麻烦，jakeWharton将注解及对应AspectJ方法实现，和对应插件放在一起。 我这边是把aspectJ插件专门抽出来，后续再有aop的任务，扩展会比较简..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编写aspectj插件-重写Hugo\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":194},"filePathRelative":"fe/android/框架编写/编写aspectj插件-重写Hugo.md","localizedDate":"2024年3月24日","excerpt":"<p>1、前言\\nHugo 是JakeWharton写的性能检测框架\\n原理是利用aspectj Aop切片编程，拦截注解方法，在Around中对方法进行操作</p>\\n<p>由于aspectj 引入gradle配置比较麻烦，jakeWharton将注解及对应AspectJ方法实现，和对应插件放在一起。</p>\\n<p>我这边是把aspectJ插件专门抽出来，后续再有aop的任务，扩展会比较简单。</p>\\n<p>引入aspectj插件方法</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>主build.gradle\\napply plugin: 'com.chaoliu.aspectj'\\naspectj {\\n    enabled true //注解是否生效\\n    isCompile true //aspectj是否complie引入\\n}\\n\\nbuildscript {    \\n    dependencies {\\n        classpath fileTree(dir: 'plugins', include: ['*.jar'])\\n        classpath 'org.aspectj:aspectjtools:1.8.6'\\n     }\\n}\\n\\n</code></pre></div>","autoDesc":true}`);export{u as comp,m as data};
