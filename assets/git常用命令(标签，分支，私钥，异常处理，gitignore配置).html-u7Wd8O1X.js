import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as t,f as n}from"./app-CtvCwAmI.js";const a={},r=n(`<h4 id="设置全局信息" tabindex="-1"><a class="header-anchor" href="#设置全局信息"><span>设置全局信息</span></a></h4><p>git config --global user.name &quot;chentong&quot; git config --global user.email &quot;chentong01@gmail.com&quot;</p><h4 id="生成私钥" tabindex="-1"><a class="header-anchor" href="#生成私钥"><span>生成私钥</span></a></h4><p>ssh-keygen -t rsa -b 4096 -C &quot;chentong01@gmail.com&quot;</p><p>查看公钥 cat ~/.ssh/id_rsa.pub 拷贝公钥至剪切板（mac） clip &lt; ~/.ssh/id_rsa.pub</p><h4 id="正常创建git项目流程" tabindex="-1"><a class="header-anchor" href="#正常创建git项目流程"><span>正常创建git项目流程</span></a></h4><p>mkdir appdir //创建文件夹 cd appdir git init //git项目初始化 touch README.md //新建readme文档 git add README.md //git add 文件 git commit -m &quot;first commit&quot; //本地提交 git remote add origin git@github.com:yinlingchaoliu/githubAppWeex.git // 仓库增加远程链接 git push -u origin master //推送至远程仓库</p><h4 id="将非git项目本地代码-提交到新的远程仓库" tabindex="-1"><a class="header-anchor" href="#将非git项目本地代码-提交到新的远程仓库"><span>将非git项目本地代码 提交到新的远程仓库</span></a></h4><p>cd appdir git init //git项目初始化 git add *<br> git commit -m &quot;first comit&quot; git remote rm origin //删除旧的远程链接<br> git remote add origin git@github.com:yinlingchaoliu/githubAppWeex.git //增加新的远程链接 git push --set-upstream origin master //推送至远程</p><h4 id="克隆下载项目" tabindex="-1"><a class="header-anchor" href="#克隆下载项目"><span>克隆下载项目</span></a></h4><p>git clone git@github.com:yinlingchaoliu/githubAppWeex.git</p><h4 id="分支命令" tabindex="-1"><a class="header-anchor" href="#分支命令"><span>分支命令</span></a></h4><p>查看分支 git branch 查看分支（远程+本地） git branch --all 创建特性分支（feature_name 分支名） git checkout -b feature_name 切换分支 git checkout feature_name 合并分支 git merge feature_name 删除分支 git branch -d feature_name 推送到指定分支 git push -u origin feature_name</p><h4 id="查看项目状态" tabindex="-1"><a class="header-anchor" href="#查看项目状态"><span>查看项目状态</span></a></h4><p>git status （任何情况随时要git status）</p><h4 id="tag标签" tabindex="-1"><a class="header-anchor" href="#tag标签"><span>tag标签</span></a></h4><p>显示所有tag git tag 打标签 git tag v1.0.0 git tag v1.0.0 -m &quot;1.0.0版本&quot; 增加附注 git tag v1.0.0 9fbc3d0 补打标签 查看标签信息 git show v1.0.0 推送标签 git push origin v1.0.0 上传标签 git push origin –tags 所有标签推送上去 删除标签 git push origin --delete v1.0.0 获取指定tag代码 git checkout tag 创建分支基于指定tag git checkout -b branch tag</p><h4 id="远程项目管理" tabindex="-1"><a class="header-anchor" href="#远程项目管理"><span>远程项目管理</span></a></h4><p>查看远程项目 git remote -v 删除项目远程地址 git remote rm origin 添加远程项目 git remote add origin git@github.com:yinlingchaoliu/githubAppWeex.git</p><h4 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理"><span>异常处理</span></a></h4><p>git reset --hard HEAD 表示所有都撤销都以前状态 git reset --soft HEAD 撤销commit git branch --set-upstream dev origin/dev 与远程分支建立链接 git branch --set-upstream-to=origin/dev git push --set-upstream origin master //推送至远程</p><h4 id="gitignore-配置文件" tabindex="-1"><a class="header-anchor" href="#gitignore-配置文件"><span>.gitignore 配置文件</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>*.[oa]   忽略.a .o 结尾
 *~  忽略~ 结尾
# &#39;#&#39; 开头是注释或者当前行配置失效

# 忽略所有 .a 结尾的文件
*.a
#!在模式前加上惊叹号（!）取反
# lib.a 除外
!lib.a
#匹配模式最后跟反斜杠（/）说明要忽略的是目录。
# 仅仅忽略项目根目录下的 TODO 文件，不包括subdir/TODO
/TODO
# 忽略 build/ 目录下的所有文件
build/
# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt
doc/*.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>git配置</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ cd  ~
$ vi .gitconfig
//配置文件内容
[user]
        name = 陈桐
        email = chentong01@hexindai.com
        password = hexin@123
[branch]
        autosetuprebase = always
[core]
        autocrlf = input
        excludesfile = /Users/chentong/.gitignore_global
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>全局.gitignore配置，每个项目都生效</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>cd ~
vi .gitignore_global
*~
.DS_Store
.externalNativeBuild
local.properties
.gradle/
.idea/
/captures
build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),s=[r];function g(d,o){return e(),t("div",null,s)}const m=i(a,[["render",g],["__file","git常用命令(标签，分支，私钥，异常处理，gitignore配置).html.vue"]]),h=JSON.parse('{"path":"/fe/tools/git%E7%9B%B8%E5%85%B3/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4(%E6%A0%87%E7%AD%BE%EF%BC%8C%E5%88%86%E6%94%AF%EF%BC%8C%E7%A7%81%E9%92%A5%EF%BC%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%EF%BC%8Cgitignore%E9%85%8D%E7%BD%AE).html","title":"git常用命令(标签，分支，私钥，异常处理，gitignore配置)","lang":"zh-CN","frontmatter":{"title":"git常用命令(标签，分支，私钥，异常处理，gitignore配置)","date":"2024-03-24T11:47:50.000Z","category":["git相关"],"tag":["archive"],"description":"设置全局信息 git config --global user.name \\"chentong\\" git config --global user.email \\"chentong01@gmail.com\\" 生成私钥 ssh-keygen -t rsa -b 4096 -C \\"chentong01@gmail.com\\" 查看公钥 cat ~/.ssh/id...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/tools/git%E7%9B%B8%E5%85%B3/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4(%E6%A0%87%E7%AD%BE%EF%BC%8C%E5%88%86%E6%94%AF%EF%BC%8C%E7%A7%81%E9%92%A5%EF%BC%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%EF%BC%8Cgitignore%E9%85%8D%E7%BD%AE).html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"git常用命令(标签，分支，私钥，异常处理，gitignore配置)"}],["meta",{"property":"og:description","content":"设置全局信息 git config --global user.name \\"chentong\\" git config --global user.email \\"chentong01@gmail.com\\" 生成私钥 ssh-keygen -t rsa -b 4096 -C \\"chentong01@gmail.com\\" 查看公钥 cat ~/.ssh/id..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T14:17:18.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T14:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git常用命令(标签，分支，私钥，异常处理，gitignore配置)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-25T14:17:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711376238000,"updatedTime":1711376238000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":2.33,"words":698},"filePathRelative":"fe/tools/git相关/git常用命令(标签，分支，私钥，异常处理，gitignore配置).md","localizedDate":"2024年3月24日","excerpt":"<h4>设置全局信息</h4>\\n<p>git config --global user.name \\"chentong\\"\\ngit config --global user.email \\"chentong01@gmail.com\\"</p>\\n<h4>生成私钥</h4>\\n<p>ssh-keygen -t rsa -b 4096 -C \\"chentong01@gmail.com\\"</p>\\n<p>查看公钥\\ncat ~/.ssh/id_rsa.pub\\n拷贝公钥至剪切板（mac）\\nclip &lt; ~/.ssh/id_rsa.pub</p>\\n<h4>正常创建git项目流程</h4>\\n<p>mkdir appdir      //创建文件夹\\ncd appdir\\ngit init                  //git项目初始化\\ntouch README.md     //新建readme文档\\ngit add README.md   //git add 文件\\ngit commit -m \\"first commit\\"    //本地提交\\ngit remote add origin git@github.com:yinlingchaoliu/githubAppWeex.git\\n// 仓库增加远程链接\\ngit push -u origin master  //推送至远程仓库</p>","autoDesc":true}');export{m as comp,h as data};
