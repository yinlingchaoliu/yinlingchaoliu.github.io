import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,f as n}from"./app-CtvCwAmI.js";const a={},l=n(`<p>####第一性原理 提高开发效率</p><p>拆解需求： 1、语义简洁，代码清晰 2、开发速度快 3、可复用性 4、生产具有稳定性</p><p>####引入kotlin语境 #####优缺点 ######1）优点： 1.简洁</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1. lambda表达式
2. android省略findviewbyid
3. 实体类创建简单pojo
4. 遍历操作比较简单
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安全</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1. 空指针校验
2. 空类型保护操作
3. 自动数据类型转换 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>工具友好，JVM支持友好</li></ol><p>致命缺点</p><ol><li>过于追求语法简洁，特定语法不够清晰</li><li>kotlin新出，高级特性，稳定性有待商榷</li></ol><p>现阶段实战解决处理方案 1）Android界面，采用kotlin，使用特有语法糖，提高效率 2）基础业务库采用java，保证核心基础库稳定 3）制定kotlin开发规范，精选一些含义清晰，代码简洁语法，保证开发效率</p><p>语法糖清单(持续性增加)</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1. lambda表达式
2. android省略findviewbyid
3. 简单pojo
4. 遍历
5. 空指针校验
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>涉及语法糖重点使用，未涉及不采用kotlin</strong></p><p>####kotlin定位 Android UI界面（即MVP中View层）</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h4>`,15),o=[l];function d(r,s){return t(),i("div",null,o)}const m=e(a,[["render",d],["__file","kotlin定位.html.vue"]]),u=JSON.parse('{"path":"/fe/android/kotlin/kotlin%E5%AE%9A%E4%BD%8D.html","title":"kotlin定位","lang":"zh-CN","frontmatter":{"title":"kotlin定位","date":"2024-03-24T11:47:50.000Z","category":["kotlin"],"tag":["archive"],"description":"####第一性原理 提高开发效率 拆解需求： 1、语义简洁，代码清晰 2、开发速度快 3、可复用性 4、生产具有稳定性 ####引入kotlin语境 #####优缺点 ######1）优点： 1.简洁 安全 工具友好，JVM支持友好 致命缺点 过于追求语法简洁，特定语法不够清晰 kotlin新出，高级特性，稳定性有待商榷 现阶段实战解决处理方案 1）A...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/fe/android/kotlin/kotlin%E5%AE%9A%E4%BD%8D.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"kotlin定位"}],["meta",{"property":"og:description","content":"####第一性原理 提高开发效率 拆解需求： 1、语义简洁，代码清晰 2、开发速度快 3、可复用性 4、生产具有稳定性 ####引入kotlin语境 #####优缺点 ######1）优点： 1.简洁 安全 工具友好，JVM支持友好 致命缺点 过于追求语法简洁，特定语法不够清晰 kotlin新出，高级特性，稳定性有待商榷 现阶段实战解决处理方案 1）A..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T09:37:40.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"archive"}],["meta",{"property":"article:published_time","content":"2024-03-24T11:47:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T09:37:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kotlin定位\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-24T11:47:50.000Z\\",\\"dateModified\\":\\"2024-03-26T09:37:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[],"git":{"createdTime":1711445860000,"updatedTime":1711445860000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.03,"words":308},"filePathRelative":"fe/android/kotlin/kotlin定位.md","localizedDate":"2024年3月24日","excerpt":"<p>####第一性原理\\n提高开发效率</p>\\n<p>拆解需求：\\n1、语义简洁，代码清晰\\n2、开发速度快\\n3、可复用性\\n4、生产具有稳定性</p>\\n<p>####引入kotlin语境\\n#####优缺点\\n######1）优点：\\n1.简洁</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>1. lambda表达式\\n2. android省略findviewbyid\\n3. 实体类创建简单pojo\\n4. 遍历操作比较简单\\n</code></pre></div>","autoDesc":true}');export{m as comp,u as data};
