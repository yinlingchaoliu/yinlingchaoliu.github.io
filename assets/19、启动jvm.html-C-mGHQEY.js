import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-CtvCwAmI.js";const p={},e=t(`<h3 id="_1、system类初始化" tabindex="-1"><a class="header-anchor" href="#_1、system类初始化"><span>1、System类初始化</span></a></h3><ul><li>1、System类初始化方法</li><li>2、VM调用 System.initializeSystemClass()</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>System<span class="token punctuation">{</span>
    static<span class="token punctuation">{</span>
      <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

VM<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">initializeSystemClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、ending-小遗憾" tabindex="-1"><a class="header-anchor" href="#_2、ending-小遗憾"><span>2、Ending 小遗憾</span></a></h3><ul><li>未能真实实现system类加载，依然用hack方式打印输出信息</li><li>笔者水平有限，对虚拟机理解更深刻时，再完整实现</li></ul><h3 id="_3、jvm类封装" tabindex="-1"><a class="header-anchor" href="#_3、jvm类封装"><span>3、JVM类封装</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">//定义jvm</span>
<span class="token keyword">type</span> JVM <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	cmd         <span class="token operator">*</span>Cmd              <span class="token comment">//命令行</span>
	classLoader <span class="token operator">*</span>heap<span class="token punctuation">.</span>ClassLoader <span class="token comment">//类加载器</span>
	mainThread  <span class="token operator">*</span>rtda<span class="token punctuation">.</span>Thread      <span class="token comment">//主线程</span>
<span class="token punctuation">}</span>

<span class="token comment">//新建虚拟机</span>
<span class="token keyword">func</span> <span class="token function">newJVM</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>Cmd<span class="token punctuation">)</span> <span class="token operator">*</span>JVM <span class="token punctuation">{</span>
	cp <span class="token operator">:=</span> classpath<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>XjreOption<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span>cpOption<span class="token punctuation">)</span>
	classLoader <span class="token operator">:=</span> heap<span class="token punctuation">.</span><span class="token function">NewClassLoader</span><span class="token punctuation">(</span>cp<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span>verboseClassFlag<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>JVM<span class="token punctuation">{</span>
		cmd<span class="token punctuation">:</span>         cmd<span class="token punctuation">,</span>
		classLoader<span class="token punctuation">:</span> classLoader<span class="token punctuation">,</span>
		mainThread<span class="token punctuation">:</span>  rtda<span class="token punctuation">.</span><span class="token function">NewTread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//启动虚拟机</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>JVM<span class="token punctuation">)</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//暂时未能真正启动VM</span>
	<span class="token comment">//self.initJVM()</span>
	self<span class="token punctuation">.</span><span class="token function">execMain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//初始化虚拟机</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>JVM<span class="token punctuation">)</span> <span class="token function">initJVM</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	vmClass <span class="token operator">:=</span> self<span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">LoadClass</span><span class="token punctuation">(</span><span class="token string">&quot;sun/misc/VM&quot;</span><span class="token punctuation">)</span>
	base<span class="token punctuation">.</span><span class="token function">InitClass</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mainThread<span class="token punctuation">,</span> vmClass<span class="token punctuation">)</span>
	<span class="token function">interpret</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mainThread<span class="token punctuation">,</span> self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>verboseInstFlag<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//运行main主方法</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>JVM<span class="token punctuation">)</span> <span class="token function">execMain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">//获得加载类名字</span>
	className <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>class<span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
	mainClass <span class="token operator">:=</span> self<span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">LoadClass</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span>
	<span class="token comment">//获得main方法</span>
	mainMethod <span class="token operator">:=</span> mainClass<span class="token punctuation">.</span><span class="token function">GetMainMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> mainMethod <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token comment">//增加命令行参数</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span>&quot;Main method not found in class <span class="token operator">%</span>s
&quot;<span class="token punctuation">,</span> self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>class<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	frame <span class="token operator">:=</span> self<span class="token punctuation">.</span>mainThread<span class="token punctuation">.</span><span class="token function">NewFrame</span><span class="token punctuation">(</span>mainMethod<span class="token punctuation">)</span> <span class="token comment">//创建栈帧</span>

	<span class="token comment">//字符串参数</span>
	jArgs <span class="token operator">:=</span> self<span class="token punctuation">.</span><span class="token function">createArgsArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	frame<span class="token punctuation">.</span><span class="token function">LocalVars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> jArgs<span class="token punctuation">)</span>
	self<span class="token punctuation">.</span>mainThread<span class="token punctuation">.</span><span class="token function">PushFrame</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>              <span class="token comment">//将栈帧push线程stack中</span>

	<span class="token function">interpret</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mainThread<span class="token punctuation">,</span>self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>verboseInstFlag<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//创建args数组</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>JVM<span class="token punctuation">)</span><span class="token function">createArgsArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>heap<span class="token punctuation">.</span>Object <span class="token punctuation">{</span>
	<span class="token comment">//加载class类</span>
	stringClass <span class="token operator">:=</span> self<span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">LoadClass</span><span class="token punctuation">(</span><span class="token string">&quot;java/lang/String&quot;</span><span class="token punctuation">)</span>
	argsArr <span class="token operator">:=</span> stringClass<span class="token punctuation">.</span><span class="token function">ArrayClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">NewArray</span><span class="token punctuation">(</span><span class="token function">uint</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	jArgs <span class="token operator">:=</span> argsArr<span class="token punctuation">.</span><span class="token function">Refs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> arg <span class="token operator">:=</span> <span class="token keyword">range</span> self<span class="token punctuation">.</span>cmd<span class="token punctuation">.</span>args <span class="token punctuation">{</span>
		jArgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> heap<span class="token punctuation">.</span><span class="token function">JString</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> arg<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> argsArr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动jvm</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">//启动jvm</span>
<span class="token keyword">func</span> <span class="token function">startJvm</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>Cmd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">newJVM</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印hello world</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run main   <span class="token parameter variable">-cp</span> test/lib/example.jar   jvmgo.book.ch01.HelloWorld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="实战项目地址" tabindex="-1"><a class="header-anchor" href="#实战项目地址"><span>实战项目地址</span></a></h3><p>https://gitee.com/yinlingchaoliu/jvmgo.git</p><p>提交标签 &quot;jvm&quot;</p>`,14),o=[e];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","19、启动jvm.html.vue"]]),k=JSON.parse('{"path":"/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/19%E3%80%81%E5%90%AF%E5%8A%A8jvm.html","title":"19、启动jvm","lang":"zh-CN","frontmatter":{"title":"19、启动jvm","date":"2024-04-10T06:06:06.000Z","category":["手动编写jvm虚拟机"],"tag":["jvmgo"],"description":"1、System类初始化 1、System类初始化方法 2、VM调用 System.initializeSystemClass() 2、Ending 小遗憾 未能真实实现system类加载，依然用hack方式打印输出信息 笔者水平有限，对虚拟机理解更深刻时，再完整实现 3、JVM类封装 启动jvm 打印hello world 实战项目地址 https:...","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/19%E3%80%81%E5%90%AF%E5%8A%A8jvm.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"19、启动jvm"}],["meta",{"property":"og:description","content":"1、System类初始化 1、System类初始化方法 2、VM调用 System.initializeSystemClass() 2、Ending 小遗憾 未能真实实现system类加载，依然用hack方式打印输出信息 笔者水平有限，对虚拟机理解更深刻时，再完整实现 3、JVM类封装 启动jvm 打印hello world 实战项目地址 https:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T22:43:38.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"jvmgo"}],["meta",{"property":"article:published_time","content":"2024-04-10T06:06:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-09T22:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"19、启动jvm\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-10T06:06:06.000Z\\",\\"dateModified\\":\\"2024-04-09T22:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[{"level":3,"title":"1、System类初始化","slug":"_1、system类初始化","link":"#_1、system类初始化","children":[]},{"level":3,"title":"2、Ending 小遗憾","slug":"_2、ending-小遗憾","link":"#_2、ending-小遗憾","children":[]},{"level":3,"title":"3、JVM类封装","slug":"_3、jvm类封装","link":"#_3、jvm类封装","children":[]},{"level":3,"title":"实战项目地址","slug":"实战项目地址","link":"#实战项目地址","children":[]}],"git":{"createdTime":1712702618000,"updatedTime":1712702618000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":1}]},"readingTime":{"minutes":1.22,"words":366},"filePathRelative":"basis/jvm/手动编写jvm虚拟机/19、启动jvm.md","localizedDate":"2024年4月10日","excerpt":"<h3>1、System类初始化</h3>\\n<ul>\\n<li>1、System类初始化方法</li>\\n<li>2、VM调用 System.initializeSystemClass()</li>\\n</ul>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code>System<span class=\\"token punctuation\\">{</span>\\n    static<span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">registerNatives</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nVM<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">initialize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        System<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">initializeSystemClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
