import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-CtvCwAmI.js";const p={},o=t(`<h3 id="执行文件-入参解析" tabindex="-1"><a class="header-anchor" href="#执行文件-入参解析"><span>执行文件 入参解析</span></a></h3><p>cmd.go</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;flag&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token comment">// java [-options] class [args...]</span>
<span class="token keyword">type</span> Cmd <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	helpFlag    <span class="token builtin">bool</span>   <span class="token comment">//java -help</span>
	versionFlag <span class="token builtin">bool</span>   <span class="token comment">//java -version</span>
	cpOption    <span class="token builtin">string</span>
	class       <span class="token builtin">string</span> <span class="token comment">// 执行主类</span>
	args        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment">// 附加参数</span>
<span class="token punctuation">}</span>

<span class="token comment">//将flag参数转成cmd</span>
<span class="token keyword">func</span> <span class="token function">parseCmd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>Cmd <span class="token punctuation">{</span>
	cmd <span class="token operator">:=</span> <span class="token operator">&amp;</span>Cmd<span class="token punctuation">{</span><span class="token punctuation">}</span>

	flag<span class="token punctuation">.</span>Usage <span class="token operator">=</span> printUsage
	flag<span class="token punctuation">.</span><span class="token function">BoolVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cmd<span class="token punctuation">.</span>helpFlag<span class="token punctuation">,</span> <span class="token string">&quot;help&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;print help message&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">BoolVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cmd<span class="token punctuation">.</span>helpFlag<span class="token punctuation">,</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;print help message&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">BoolVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cmd<span class="token punctuation">.</span>versionFlag<span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;print version and exit&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">StringVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cmd<span class="token punctuation">.</span>cpOption<span class="token punctuation">,</span> <span class="token string">&quot;classpath&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;classpath&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">StringVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cmd<span class="token punctuation">.</span>cpOption<span class="token punctuation">,</span> <span class="token string">&quot;cp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;classpath&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">//parse失败 会执行 printUsage</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">//解析剩余参数</span>
	args <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Args</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		cmd<span class="token punctuation">.</span>class <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
		cmd<span class="token punctuation">.</span>args <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> cmd
<span class="token punctuation">}</span>

<span class="token comment">//使用范例</span>
<span class="token keyword">func</span> <span class="token function">printUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span>&quot;Usage<span class="token punctuation">:</span> <span class="token operator">%</span>s <span class="token punctuation">[</span><span class="token operator">-</span>options<span class="token punctuation">]</span> class <span class="token punctuation">[</span>args<span class="token operator">...</span><span class="token punctuation">]</span>
&quot;<span class="token punctuation">,</span> os<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试类" tabindex="-1"><a class="header-anchor" href="#测试类"><span>测试类</span></a></h3><p>main.go</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cmd <span class="token operator">:=</span> <span class="token function">parseCmd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> cmd<span class="token punctuation">.</span>versionFlag <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;version 0.0.1&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>helpFlag <span class="token operator">||</span> cmd<span class="token punctuation">.</span>class <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		<span class="token function">printUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">startJVM</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">startJVM</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>Cmd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span>&quot;classpath<span class="token punctuation">:</span><span class="token operator">%</span>s class<span class="token punctuation">:</span><span class="token operator">%</span>s args<span class="token punctuation">:</span><span class="token operator">%</span>v
&quot;<span class="token punctuation">,</span>
		cmd<span class="token punctuation">.</span>cpOption<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span>class<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span>args<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试命令 run.sh</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-ex</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span><span class="token environment constant">$PWD</span>
go run <span class="token builtin class-name">.</span> <span class="token parameter variable">-version</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-q</span> <span class="token string">&quot;version 0.0.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>go命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go <span class="token function">install</span> 编译
go run 运行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实战项目地址" tabindex="-1"><a class="header-anchor" href="#实战项目地址"><span>实战项目地址</span></a></h3><p>https://gitee.com/yinlingchaoliu/jvmgo.git</p><p>提交标签 &quot;cmd&quot;</p>`,13),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","2、cmd命令行参数解析.html.vue"]]),d=JSON.parse('{"path":"/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/2%E3%80%81cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90.html","title":"2、cmd命令行参数解析","lang":"zh-CN","frontmatter":{"title":"2、cmd命令行参数解析","date":"2024-04-10T06:06:06.000Z","category":["手动编写jvm虚拟机"],"tag":["jvmgo"],"description":"执行文件 入参解析 cmd.go 测试类 main.go 测试命令 run.sh go命令 实战项目地址 https://gitee.com/yinlingchaoliu/jvmgo.git 提交标签 \\"cmd\\"","head":[["meta",{"property":"og:url","content":"https://yinlingchaoliu.github.io/basis/jvm/%E6%89%8B%E5%8A%A8%E7%BC%96%E5%86%99jvm%E8%99%9A%E6%8B%9F%E6%9C%BA/2%E3%80%81cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"引领潮流"}],["meta",{"property":"og:title","content":"2、cmd命令行参数解析"}],["meta",{"property":"og:description","content":"执行文件 入参解析 cmd.go 测试类 main.go 测试命令 run.sh go命令 实战项目地址 https://gitee.com/yinlingchaoliu/jvmgo.git 提交标签 \\"cmd\\""}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T22:43:38.000Z"}],["meta",{"property":"article:author","content":"引领潮流"}],["meta",{"property":"article:tag","content":"jvmgo"}],["meta",{"property":"article:published_time","content":"2024-04-10T06:06:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-09T22:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2、cmd命令行参数解析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-10T06:06:06.000Z\\",\\"dateModified\\":\\"2024-04-09T22:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"引领潮流\\",\\"url\\":\\"https://www.jianshu.com/u/bdcce32c05dd\\"}]}"]]},"headers":[{"level":3,"title":"执行文件 入参解析","slug":"执行文件-入参解析","link":"#执行文件-入参解析","children":[]},{"level":3,"title":"测试类","slug":"测试类","link":"#测试类","children":[]},{"level":3,"title":"实战项目地址","slug":"实战项目地址","link":"#实战项目地址","children":[]}],"git":{"createdTime":1711376238000,"updatedTime":1712702618000,"contributors":[{"name":"引领潮流","email":"heat13@qq.com","commits":2}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"basis/jvm/手动编写jvm虚拟机/2、cmd命令行参数解析.md","localizedDate":"2024年4月10日","excerpt":"<h3>执行文件 入参解析</h3>\\n<p>cmd.go</p>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"flag\\"</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"fmt\\"</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"os\\"</span>\\n\\n<span class=\\"token comment\\">// java [-options] class [args...]</span>\\n<span class=\\"token keyword\\">type</span> Cmd <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\thelpFlag    <span class=\\"token builtin\\">bool</span>   <span class=\\"token comment\\">//java -help</span>\\n\\tversionFlag <span class=\\"token builtin\\">bool</span>   <span class=\\"token comment\\">//java -version</span>\\n\\tcpOption    <span class=\\"token builtin\\">string</span>\\n\\tclass       <span class=\\"token builtin\\">string</span> <span class=\\"token comment\\">// 执行主类</span>\\n\\targs        <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">string</span> <span class=\\"token comment\\">// 附加参数</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//将flag参数转成cmd</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">parseCmd</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>Cmd <span class=\\"token punctuation\\">{</span>\\n\\tcmd <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&amp;</span>Cmd<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n\\tflag<span class=\\"token punctuation\\">.</span>Usage <span class=\\"token operator\\">=</span> printUsage\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">BoolVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>cmd<span class=\\"token punctuation\\">.</span>helpFlag<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"help\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"print help message\\"</span><span class=\\"token punctuation\\">)</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">BoolVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>cmd<span class=\\"token punctuation\\">.</span>helpFlag<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"?\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"print help message\\"</span><span class=\\"token punctuation\\">)</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">BoolVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>cmd<span class=\\"token punctuation\\">.</span>versionFlag<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"version\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"print version and exit\\"</span><span class=\\"token punctuation\\">)</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">StringVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>cmd<span class=\\"token punctuation\\">.</span>cpOption<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"classpath\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"classpath\\"</span><span class=\\"token punctuation\\">)</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">StringVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>cmd<span class=\\"token punctuation\\">.</span>cpOption<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"cp\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"classpath\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token comment\\">//parse失败 会执行 printUsage</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n\\t<span class=\\"token comment\\">//解析剩余参数</span>\\n\\targs <span class=\\"token operator\\">:=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Args</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>args<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tcmd<span class=\\"token punctuation\\">.</span>class <span class=\\"token operator\\">=</span> args<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n\\t\\tcmd<span class=\\"token punctuation\\">.</span>args <span class=\\"token operator\\">=</span> args<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> cmd\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//使用范例</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">printUsage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span>\\"Usage<span class=\\"token punctuation\\">:</span> <span class=\\"token operator\\">%</span>s <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">-</span>options<span class=\\"token punctuation\\">]</span> class <span class=\\"token punctuation\\">[</span>args<span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span>\\n\\"<span class=\\"token punctuation\\">,</span> os<span class=\\"token punctuation\\">.</span>Args<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
